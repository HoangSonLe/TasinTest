version: '3.8'

services:
  # Tasin Web Application
  tasin-web:
    build:
      context: .
      dockerfile: src/Tasin.Website/Dockerfile
    container_name: tasin-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__TasinDB=Server=host.docker.internal;Port=5434;Database=Tasin;User Id=postgres;Password=123456;
      - JWT__SecretKey=${JWT_SECRET_KEY:-$2a$10$v9n9Osb00.qmmslF0FOboOO4PP4NG5Cv8lDIFgOnLsyvCPpQUKaUG}
      - TelegramToken=${TELEGRAM_TOKEN:-}
      - EmailSettings__SmtpUser=${SMTP_USER:-}
      - EmailSettings__SmtpPass=${SMTP_PASS:-}
      - UrlWeb=${APP_URL:-http://localhost:8080/}
      - FolderPathImage=/app/Files
    volumes:
      - app_files:/app/Files
      - app_files_low_quality:/app/FilesWithLowQuality
      - app_logs:/app/logs
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - postgres

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tasin-postgres
    environment:
      - POSTGRES_DB=Tasin
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/Tasin.Website/Database:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  app_files:
    driver: local
  app_files_low_quality:
    driver: local
  app_logs:
    driver: local
  postgres_data:
    driver: local
